{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#3339","title":"\u041a\u043e\u0441\u043c\u0430\u0447 \u041c\u0430\u0440\u0438\u044f \u041a3339","text":""},{"location":"LR1/task_1/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0421\u0435\u0440\u0432\u0435\u0440 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430.</p> <p>\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket</p> <p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 UDP</p>"},{"location":"LR1/task_1/#_1","title":"\u0425\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b","text":""},{"location":"LR1/task_1/#serverpy","title":"server.py:","text":"<pre><code>import socket\n\nserver = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\nserver.bind(('', 14900))\n\ndata, client_address = server.recvfrom(16384)\nprint(data.decode(\"UTF-8\"))\n\nserver.sendto(b\"Hello, client\", client_address)\nserver.close()\n</code></pre>"},{"location":"LR1/task_1/#clientpy","title":"client.py:","text":"<pre><code>import socket\n\nserver_address = ('localhost', 14900)\n\nclient = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)\nclient.sendto(b\"Hello, server\", server_address)\n\ndata = client.recv(16384)\nprint(data.decode(\"UTF-8\"))\n\nclient.close()\n</code></pre>"},{"location":"LR1/task_1/#_2","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442","text":""},{"location":"LR1/task_2/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u0412\u0430\u0440\u0438\u0430\u043d\u0442: \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f</p> <p>\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket</p> <p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430 TCP</p>"},{"location":"LR1/task_2/#_1","title":"\u0425\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b","text":""},{"location":"LR1/task_2/#serverpy","title":"server.py","text":"<pre><code>import socket\nfrom math import sqrt\n\ndef calculate_discriminant(a, b, c):\n    return b ** 2 - 4 * a * c\n\ndef get_answer(a, b, c):\n    discriminant = calculate_discriminant(a, b, c)\n    if discriminant &lt; 0:\n        return 'Error'\n    elif discriminant == 0:\n        x = -(b) / (2 * a)\n        return str(x)\n    else:\n        x1 = (-(b) + sqrt(discriminant)) / (2 * a)\n        x2 = (-(b) - sqrt(discriminant)) / (2 * a)\n        return f\"{x1}, {x2}\"\n\nserver = socket.socket(socket.AF_INET,socket.SOCK_STREAM)\nserver.bind(('', 14900))\nserver.listen(1)\n\nclient_socket, client_address = server.accept()\ndata = client_socket.recvfrom(16384)[0]\ncoefficients = list(map(int, data.decode(\"UTF-8\").split()))\n\nanswer = get_answer(*coefficients)\nclient_socket.send(bytes(answer, 'UTF-8'))\n\nclient_socket.close()\nserver.close()\n</code></pre>"},{"location":"LR1/task_2/#clientpy","title":"client.py","text":"<pre><code>import socket\n\nserver_address = ('localhost', 14900)\nclient = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n\ntry:\n    coefficients = list(map(int, input(\"\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u044b a, b, c: \").split()))\nexcept Exception:\n    coefficients = None\n    print('\u041e\u0448\u0438\u0431\u043a\u0430! \u041d\u0435\u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442 \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u043e\u0432!')\n\nif coefficients is not None:\n    coefficients = bytes(' '.join([str(coefficient) for coefficient in coefficients]), 'UTF-8')\n\nclient.connect(server_address)\nclient.send(coefficients)\n\ndata = client.recv(16384)\nprint(data.decode(\"UTF-8\"))\n\nclient.close()\n</code></pre>"},{"location":"LR1/task_2/#_2","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442","text":""},{"location":"LR1/task_3/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443. \u0412 \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 http-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html.</p> <p>\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 socket</p>"},{"location":"LR1/task_3/#_1","title":"\u0425\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b","text":""},{"location":"LR1/task_3/#serverpy","title":"server.py","text":"<pre><code>import socket\n\nhtml_file = open('index.html')\nhtml_data = '\\n'.join(html_file.readlines())\nresponse_type = \"HTTP/1.1 200 OK\"\ncontent_type = \"Content-Type: text/html\"\n\nserver = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nserver.bind(('', 14900))\nserver.listen(1)\n\nclient_socket, client_address = server.accept()\nanswer = f\"{response_type}\\n{content_type}\\n\\n{html_data}\"\nclient_socket.send(bytes(answer, 'UTF-8'))\nclient_socket.close()\nserver.close()\n</code></pre>"},{"location":"LR1/task_3/#clientpy","title":"client.py","text":"<pre><code>import socket\n\nserver_address = ('localhost', 14900)\nclient = socket.socket(socket.AF_INET,socket.SOCK_STREAM)\nclient.connect(server_address)\n\ndata = client.recv(16384)\nprint(data.decode(\"UTF-8\"))\n\nclient.close()\n</code></pre>"},{"location":"LR1/task_3/#indexhtml","title":"index.html","text":"<pre><code>&lt;h1&gt;Hello, client!&lt;/h1&gt;\n</code></pre>"},{"location":"LR1/task_3/#_2","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442","text":""},{"location":"LR1/task_4/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 4","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0441\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043b\u043b\u043e\u0432.</p> <p>\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 threading</p>"},{"location":"LR1/task_4/#_1","title":"\u0425\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b","text":""},{"location":"LR1/task_4/#serverpy","title":"server.py","text":"<pre><code>import socket\nimport threading\nfrom datetime import datetime\n\nusers = []\n\nserver = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nserver.bind(('', 14900))\nserver.listen(1)\n\n\ndef print_message(data):\n    message_time = datetime.now()\n    message_hour = str(message_time.hour).ljust(2, '0')\n    message_minute = str(message_time.minute).ljust(2, '0')\n    print(f\"{message_hour}:{message_minute} - {data}\")\n\ndef send_message(data, sender_id):\n    message_time = datetime.now()\n    message_hour = str(message_time.hour).ljust(2, '0')\n    message_minute = str(message_time.minute).ljust(2, '0')\n    data = f\"{message_hour}:{message_minute} - {data}\".encode('utf-8')\n    for user_index, user in enumerate(users):\n        if user_index + 1 != sender_id:\n            user.send(data)\n\ndef listen(client_socket):\n    while True:\n        data = client_socket.recv(16384)\n        user_id = users.index(client_socket) + 1\n        line = f\"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c #{user_id} - {data.decode('UTF-8')}\"\n        print_message(line)\n        send_message(line, user_id)\n\n\nwhile True:\n    client_socket, client_address = server.accept()\n    if client_socket not in users:\n        users.append(client_socket)\n\nuser_id = users.index(client_socket) + 1\nline = f\"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c #{user_id} \u043f\u0440\u0438\u0441\u043e\u0435\u0434\u0438\u043d\u0438\u043b\u0441\u044f \u043a \u0447\u0430\u0442\u0443!\"\nprint_message(line)\nsend_message(line, user_id)\n\nlisten_thread = threading.Thread(target=listen, args=(client_socket,))\nlisten_thread.start()\n\nserver.close()\n</code></pre>"},{"location":"LR1/task_4/#clientpy","title":"client.py","text":"<pre><code>import socket\nimport threading\n\nserver_address = ('localhost', 14900)\nclient = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nclient.connect(server_address)\n\ndef listen():\n    while True:\n        data = client.recv(16384)\n        print(data.decode('UTF-8'))\n\ndef polling():\n    while True:\n        data = input()\n        client.send(data.encode('utf-8'))\n\n\nlisten_thread = threading.Thread(target=listen)\nlisten_thread.start()\n\npolling_thread = threading.Thread(target=polling)\npolling_thread.start()\n</code></pre>"},{"location":"LR1/task_4/#_2","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442","text":""},{"location":"LR1/task_5/","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 5","text":"<p>\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 web-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST http \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Python \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket.</p>"},{"location":"LR1/task_5/#_1","title":"\u0425\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b","text":""},{"location":"LR1/task_5/#serverpy","title":"\u041a\u043e\u0434 server.py","text":"<pre><code>import socket\nimport sys\n\n\nclass Response:\n    def __init__(self, status, reason, headers=None, body=None):\n        self.status = status\n        self.reason = reason\n        self.headers = headers\n        self.body = body\n\n\nclass MyHTTPServer:\n    def __init__(self, host, port):\n        self.host = host\n        self.port = port\n        self.marks = {}\n\ndef serve_forever(self):\n    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n    server.bind((self.host, self.port))\n    server.listen()\n\n    while True:\n        client_socket, client_address = server.accept()\n        self.serve_client(client_socket)\n\ndef serve_client(self, client_socket):\n    data, http_method, params_dict = self.parse_request(client_socket)\n    headers = self.parse_headers(data)\n    resp = self.handle_request(http_method, params_dict)\n    self.send_response(client_socket, resp)\n\ndef parse_request(self, client_socket):\n    data = client_socket.recv(16384).decode(\"UTF-8\").split('\\n')\n    http_method, http_url, http_version = data[0].split()\n    params_dict = {}\n    try:\n        params = http_url.split(\"?\")[1].split(\"&amp;\")\n    except Exception as e:\n        print(str(e))\n        params = []\n    if http_url == '/favicon.ico':\n        params_dict = {}\n    for param in params:\n        name, value = param.split('=')\n        params_dict[name] = value\n    return data, http_method, params_dict\n\ndef parse_headers(self, data):\n    headers = []\n    for line in data:\n        if line == '':\n            break\n        headers.append(line)\n    return headers\n\ndef handle_request(self, http_method, params_dict):\n    if http_method == 'POST':\n        name = params_dict['name']\n        value = params_dict['value']\n        if name in self.marks:\n            self.marks[name].append(value)\n        else:\n            self.marks[name] = [value]\n        return Response(200, 'OK', body='OK')\n    elif http_method == 'GET':\n        if params_dict == {}:\n            return Response(404, 'Not found')\n        name = params_dict['name']\n        if name in self.marks:\n            marks = self.marks[name]\n            return Response(200, 'OK', body=f\"&lt;b&gt;{name}: {marks}&lt;/b&gt;\")\n        else:\n            return Response(404, 'Not found')\n\ndef send_response(self, client_socket, resp):\n    response = f\"HTTP/1.1 {resp.status} {resp.reason}\\nContent-Type: text/html\\n\\n{resp.body}\"\n    client_socket.send(response.encode(\"UTF-8\"))\n    client_socket.close()\n\n\n\nif __name__ == '__main__':\n    host = 'localhost'\n    port = 14900\n    server = MyHTTPServer(host, port)\n    server.serve_forever()\n</code></pre>"},{"location":"LR1/task_5/#clientpy","title":"client.py","text":"<pre><code>import socket\n\nserver_address = ('localhost', 14900)\n\ndef send_mark(name, value):\n    http_method = 'POST'\n    http_url = f\"isu.ifmo.ru/pls/apex/f?name={name}&amp;value={value}\"\n    http_version = \"HTTP/1.1\"\n    data = f\"{http_method} {http_url} {http_version}\\nHost: example.local\\n\"\n\nclient = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nclient.connect(server_address)\nclient.send(bytes(data, 'UTF-8'))\n\ndata = client.recv(16384)\nprint(data.decode(\"UTF-8\"))\n\nclient.close()\n\ndef get_marks(name):\n    http_method = 'GET'\n    http_url = f\"isu.ifmo.ru/pls/apex/f?name={name}\"\n    http_version = \"HTTP/1.1\"\n    data = f\"{http_method} {http_url} {http_version}\\nHost: example.local\\n\"\n\nclient = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nclient.connect(server_address)\nclient.send(bytes(data, 'UTF-8'))\n\ndata = client.recv(16384)\nprint(data.decode(\"UTF-8\"))\n\nclient.close()\n\nsend_mark('\u041e\u041e\u041f', 5)\nget_marks('\u041e\u041e\u041f')\nget_marks('\u041c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0430')\n</code></pre>"},{"location":"LR1/task_5/#_2","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442","text":""},{"location":"LR2/lab2/","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162","text":"<p>\u0422\u0430\u0431\u043b\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u0430\u0445 \u0430\u0432\u0442\u043e\u0433\u043e\u043d\u043e\u043a: \u0424\u0418\u041e \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u0430, \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u044f, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u0430, \u043e\u043f\u044b\u0442 \u0438 \u043a\u043b\u0430\u0441\u0441 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u0430. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: - \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. - \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0430\u0432\u0442\u043e\u0433\u043e\u043d\u043e\u043a \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e \u0433\u043e\u043d\u0449\u0438\u043a\u043e\u0432. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0439. - \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 \u043a \u0430\u0432\u0442\u043e\u0433\u043e\u043d\u043a\u0430\u043c. \u041f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0434\u0430\u0442\u044b \u0437\u0430\u0435\u0437\u0434\u0430, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0442\u0438\u043f \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f (\u0432\u043e\u043f\u0440\u043e\u0441 \u043e \u0441\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u0447\u0435\u0441\u0442\u0432\u0435, \u0432\u043e\u043f\u0440\u043e\u0441 \u043e \u0433\u043e\u043d\u043a\u0430\u0445, \u0438\u043d\u043e\u0435), \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435. - \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u0437\u0430\u0435\u0437\u0434\u0430 \u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django-admin. - \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0432\u0441\u0435\u0445 \u0437\u0430\u0435\u0437\u0434\u043e\u0432 \u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0433\u043e\u043d\u043a\u0438.</p>"},{"location":"LR2/lab2/#_1","title":"\u0425\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b","text":""},{"location":"LR2/lab2/#modelspy","title":"models.py:","text":"<pre><code>class User(AbstractUser):\nfirst_name = models.CharField(max_length=30)\nlast_name = models.CharField(max_length=30)\nhas_racer = models.BooleanField(default=False)\n\ndef __str__(self):\n    return f\"{self.first_name} {self.last_name}\"\n\n\nclass Racer(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    team = models.CharField(max_length=100)\n    car = models.CharField(max_length=100)\n    description = models.TextField()\n    experience = models.IntegerField()\n    type = models.CharField(max_length=100)\n\n\nclass Race(models.Model):\n    name = models.CharField(max_length=100)\n    date = models.DateTimeField()\n    winner = models.ForeignKey(Racer, on_delete=models.SET_NULL, blank=True, null=True)\n\n    def __str__(self):\n        return f\"{self.name}\"\n\n\nclass RaceConnection(models.Model):\n    racer = models.ForeignKey(Racer, on_delete=models.CASCADE)\n    race = models.ForeignKey(Race, on_delete=models.CASCADE)\n\n    class Meta:\n        unique_together = ('racer', 'race')\n\n\nclass Comment(models.Model):\n    COMMENT_TYPES = (\n        (\"cooperation\", \"\u0421\u043e\u0442\u0440\u0443\u0434\u043d\u0438\u0447\u0435\u0441\u0442\u0432\u043e\"),\n        (\"race\", \"\u0413\u043e\u043d\u043a\u0430\"),\n        (\"other\", \"\u0414\u0440\u0443\u0433\u043e\u0435\")\n    )\n    race = models.ForeignKey(Race, on_delete=models.CASCADE)\n    author = models.ForeignKey(User, on_delete=models.CASCADE)\n    text = models.TextField()\n    comment_type = models.CharField(max_length=20, choices=COMMENT_TYPES)\n    rating = models.IntegerField(\n        validators=[MinValueValidator(0), MaxValueValidator(10)]\n    )\n    created_at = models.DateTimeField(auto_now_add=True)\n</code></pre>"},{"location":"LR2/lab2/#viewspy","title":"views.py:","text":"<pre><code>def user_logout(request):\nlogout(request)\nreturn render(request, 'logout.html')\n\n\ndef user_login(request):\n    if request.method == 'POST':\n        form = LoginForm(request.POST)\n        if form.is_valid():\n            cd = form.cleaned_data\n            user = authenticate(username=cd['username'], password=cd['password'])\n            if user is not None:\n                if user.is_active:\n                    login(request, user)\n                    return redirect('profile')\n                else:\n                    return HttpResponse('Disabled account')\n            else:\n                return HttpResponse('Invalid login or password')\n    else:\n        form = LoginForm()\n    return render(request, 'login.html', {'form': form})\n\n\ndef registration(request):\n    if request.method == \"POST\":\n        form = RegistrationForm(request.POST)\n        if form.is_valid():\n            user = form.save()\n            user.set_password(user.password)\n            user.save()\n            return redirect(\"login\")\n    else:\n        form = RegistrationForm()\n\n    return render(request, \"registration.html\", {\"user_form\": form})\n\n\ndef index(request):\n    return render(request, \"index.html\")\n\n\n@login_required\ndef profile(request):\n    return render(request, 'profile.html', {'section': 'profile', 'has_racer': hasattr(request.user, 'racer')})\n\n\n@login_required\ndef racer_registration(request):\n    user = request.user\n    print(user.has_racer)\n    if hasattr(request.user, \"racer\"):\n        return HttpResponse(\"You have already got a racer\")\n    else:\n        if request.method == \"POST\":\n\n            racer_form = RacerForm(request.POST)\n            if racer_form.is_valid():\n                print(user)\n                racer = racer_form.save(commit=False)\n                racer.user = user\n                racer.save()\n                user.has_racer = True\n                user.save()\n                return redirect(\"profile\")\n        else:\n            racer_form = RacerForm()\n\n    return render(request, \"racer_registration.html\", {\"racer_form\": racer_form})\n\n\n@login_required\ndef edit_user(request):\n    if request.method == \"POST\":\n        user_form = UserUpdateForm(request.POST, instance=request.user)\n        if user_form.is_valid():\n            user_form.save()\n            return redirect('profile')\n    else:\n        user_form = UserUpdateForm(instance=request.user)\n    return render(request, \"edit_user.html\", {\"user_form\": user_form}, )\n\n\n@login_required\ndef change_password(request):\n    if request.method == \"POST\":\n        password_form = PasswordChangeForm(request.user, request.POST)\n\n        if password_form.is_valid():\n            user = password_form.save()\n            update_session_auth_hash(request, user)\n            return redirect(\"profile\")\n    else:\n        password_form = PasswordChangeForm(request.user)\n    return render(request, \"change_password.html\", {\"password_form\": password_form, })\n\n\n@login_required()\ndef edit_racer(request):\n    if request.method == \"POST\":\n        racer_form = RacerForm(request.POST, instance=request.user.racer)\n        if racer_form.is_valid():\n            racer_form.save()\n            return redirect(\"profile\")\n    else:\n        if hasattr(request.user, \"racer\"):\n            racer_form = RacerForm(instance=getattr(request.user, \"racer\", None))\n        else:\n            racer_form = None\n    return render(request, \"edit_racer.html\", {\"racer_form\": racer_form, })\n\n\n@login_required\ndef race_comments(request, race_id):\n    race = get_object_or_404(Race, id=race_id)\n    comments = Comment.objects.filter(race=race)\n    if request.method == \"POST\":\n        form = CommentForm(request.POST)\n        if form.is_valid():\n            comment = form.save(commit=False)\n            comment.race = race\n            comment.author = request.user\n            comment.save()\n    else:\n        form = CommentForm()\n    return render(request, \"race_comments.html\", {\"race\": race, \"comments\": comments, \"form\": form})\n\n\n@login_required\ndef races_list(request):\n    races = Race.objects.all()\n    race_connections = RaceConnection.objects.filter(racer=request.user.racer).values(\"race\")\n    # print(race_connections)\n    racer_races = []\n    for race_connection in race_connections:\n        racer_races.append(race_connection['race'])\n    # print(racer_races)\n    return render(request, \"races_list.html\", {\"races\": races, \"race_connections\": racer_races})\n\n\n@login_required\ndef delete_account(request):\n    if request.method == \"POST\":\n        request.user.delete()\n        return redirect(\"index\")\n    return render(request, \"delete_account.html\")\n\n\n@login_required\ndef create_race_connection(request, race_id):\n    user = request.user\n    if not (hasattr(user, \"racer\")):\n        return HttpResponse(\"You have not got a racer\")\n    else:\n        try:\n            race_connection = RaceConnection()\n            race = Race.objects.get(pk=race_id)\n            race_connection.race = race\n            race_connection.racer = user.racer\n            race_connection.save()\n        except Exception as ex:\n            print(ex)\n            return HttpResponse('You have already registrated')\n        return redirect(\"races_list\")\n    return redirect(\"races_list\")\n\n\ndef delete_race_connection(request, race_id):\n    racer = request.user.racer\n    race = Race.objects.get(pk=race_id)\n    RaceConnection.objects.filter(racer=racer, race=race).delete()\n    return redirect(\"races_list\")\n</code></pre>"},{"location":"LR2/lab2/#formspy","title":"forms.py:","text":"<pre><code>class LoginForm(forms.Form):\n    username = forms.CharField()\n    password = forms.CharField(widget=forms.PasswordInput)\n\n\nclass RegistrationForm(forms.ModelForm):\n    class Meta:\n        model = User\n        fields = [\"username\", \"password\", \"first_name\", \"last_name\"]\n\n\nclass RacerForm(forms.ModelForm):\n    class Meta:\n        model = Racer\n        fields = [\"team\", \"car\", \"description\", \"experience\", \"type\"]\n\n\nclass UserUpdateForm(forms.ModelForm):\n    class Meta:\n        model = User\n        fields = [\"first_name\", \"last_name\"]\n\n\nclass CommentForm(forms.ModelForm):\n    class Meta:\n        model = Comment\n        fields = [\"comment_type\", \"rating\", \"text\"]\n\n\nclass RaceConnectionForm(forms.ModelForm):\n    class Meta:\n        model = RaceConnection\n        fields = [\"race\"]\n</code></pre>"},{"location":"LR2/lab2/#urlspy","title":"urls.py:","text":"<pre><code>urlpatterns = [\n    path('admin/', admin.site.urls),\n    path(\"\", views.index, name=\"index\"),\n    path('login/', views.user_login, name='login'),\n    path('logout/', views.user_logout, name='logout'),\n    path('profile/', views.profile, name='profile'),\n    path(\"registration/\", views.registration, name=\"registration\"),\n    path(\"racer_registration/\", views.racer_registration, name=\"racer_registration\"),\n    path(\"edit_user/\", views.edit_user, name=\"edit_user\"),\n    path(\"change_password/\", views.change_password, name=\"change_password\"),\n    path(\"edit_racer/\", views.edit_racer, name=\"edit_racer\"),\n    path(\"races/comments/&lt;int:race_id&gt;/\", views.race_comments, name=\"race_comments\"),\n    path(\"races/\", views.races_list, name=\"races_list\"),\n    path(\"profile/delete/\", views.delete_account, name=\"delete_account\"),\n    path(\"create_race_connection/&lt;int:race_id&gt;/\", views.create_race_connection, name=\"create_race_connection\"),\n    path(\"delete_race_connection/&lt;int:race_id&gt;\", views.delete_race_connection, name=\"delete_race_connection\")\n]\n</code></pre>"},{"location":"LR2/lab2/#_2","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442","text":""},{"location":"LR2/lab2/#_3","title":"\u0413\u043b\u0430\u0432\u043d\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430:","text":""},{"location":"LR2/lab2/#_4","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438:","text":""},{"location":"LR2/lab2/#_5","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438:","text":""},{"location":"LR2/lab2/#_6","title":"\u041f\u0440\u043e\u0444\u0438\u043b\u044c:","text":""},{"location":"LR2/lab2/#_7","title":"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f:","text":""},{"location":"LR2/lab2/#_8","title":"\u0421\u043c\u0435\u043d\u0430 \u043f\u0430\u0440\u043e\u043b\u044f:","text":""},{"location":"LR2/lab2/#_9","title":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0433\u043e\u043d\u0449\u0438\u043a\u0430:","text":""},{"location":"LR2/lab2/#_10","title":"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0433\u043e\u043d\u0449\u0438\u043a\u0430:","text":""},{"location":"LR2/lab2/#_11","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0433\u043e\u043d\u043a\u0438:","text":""},{"location":"LR2/lab2/#_12","title":"\u0421\u043f\u0438\u0441\u043e\u043a \u0433\u043e\u043d\u043e\u043a:","text":""},{"location":"LR2/lab2/#_13","title":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u0430 \u0433\u043e\u043d\u043a\u0443:","text":""},{"location":"LR2/lab2/#_14","title":"\u041e\u0442\u043c\u0435\u043d\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043d\u0430 \u0433\u043e\u043d\u043a\u0443:","text":""},{"location":"LR2/lab2/#_15","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f \u043a \u0433\u043e\u043d\u043a\u0435:","text":""},{"location":"LR2/lab2/#_16","title":"\u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 \u043a \u0433\u043e\u043d\u043a\u0435:","text":""},{"location":"LR2/lab2/#_17","title":"\u0412\u044b\u0431\u043e\u0440 \u043f\u043e\u0431\u0435\u0434\u0438\u0442\u0435\u043b\u044f \u0433\u043e\u043d\u043a\u0438:","text":""},{"location":"LR2/lab2/#_18","title":"\u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043f\u043e\u0431\u0435\u0434\u0438\u0442\u0435\u043b\u044f \u0433\u043e\u043d\u043a\u0438:","text":""},{"location":"LR2/lab2/#_19","title":"\u0412\u044b\u0445\u043e\u0434 \u0438\u0437 \u043f\u0440\u043e\u0444\u0438\u043b\u044f:","text":""},{"location":"LR2/lab2/#_20","title":"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430:","text":""},{"location":"LR3/lab3/","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163","text":"<p>\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f \u0437\u0430\u0432\u0443\u0447\u0430 \u0448\u043a\u043e\u043b\u044b. \u041e\u043d\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0442\u044c \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e \u043a\u0430\u0436\u0434\u043e\u043c \u0443\u0447\u0438\u0442\u0435\u043b\u0435, \u043a\u043b\u0430\u0441\u0441\u043d\u043e\u043c \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0435, \u043e \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043d \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0435\u0442 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434, \u043d\u043e\u043c\u0435\u0440\u0435 \u0437\u0430\u043a\u0440\u0435\u043f\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0437\u0430 \u043d\u0438\u043c \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430, \u043e \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u0437\u0430\u043d\u044f\u0442\u0438\u0439. \u0421\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0442 \u0443\u0447\u0438\u0442\u0435\u043b\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u0438\u043c\u0435\u044e\u0442 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430. \u041e\u0431 \u0443\u0447\u0435\u043d\u0438\u043a\u0430\u0445 \u0434\u043e\u043b\u0436\u043d\u044b \u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f: \u0444\u0430\u043c\u0438\u043b\u0438\u044f \u0438 \u0438\u043c\u044f, \u0432 \u043a\u0430\u043a\u043e\u043c \u043a\u043b\u0430\u0441\u0441\u0435 \u0443\u0447\u0438\u0442\u0441\u044f, \u043a\u0430\u043a\u0443\u044e \u043e\u0446\u0435\u043d\u043a\u0443 \u0438\u043c\u0435\u0435\u0442 \u0432 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u0438 \u043f\u043e \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0443.</p> <p>\u0417\u0430\u0432\u0443\u0447 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043e \u043d\u043e\u0432\u043e\u043c \u0443\u0447\u0438\u0442\u0435\u043b\u0435 \u0438\u043b\u0438 \u0443\u0447\u0435\u043d\u0438\u043a\u0435, \u0432\u043d\u0435\u0441\u0442\u0438 \u0432 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u043d\u044b\u0435 \u043e\u0446\u0435\u043d\u043a\u0438 \u0443\u0447\u0435\u043d\u0438\u043a\u043e\u0432 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430 \u043f\u043e \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0443, \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0431 \u0443\u0432\u043e\u043b\u0438\u0432\u0448\u0435\u043c\u0441\u044f \u0443\u0447\u0438\u0442\u0435\u043b\u0435 \u0438 \u043e\u0442\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u043e\u043c \u0438\u0437 \u0448\u043a\u043e\u043b\u044b \u0443\u0447\u0435\u043d\u0438\u043a\u0435, \u0432\u043d\u0435\u0441\u0442\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432 \u0434\u0430\u043d\u043d\u044b\u0435 \u043e\u0431 \u0443\u0447\u0438\u0442\u0435\u043b\u044f\u0445 \u0438 \u0443\u0447\u0435\u043d\u0438\u043a\u0430\u0445, \u0432 \u0442\u043e\u043c \u0447\u0438\u0441\u043b\u0435 \u043f\u043e\u043c\u0435\u043d\u044f\u0442\u044c \u043e\u0446\u0435\u043d\u043a\u0443 \u0443\u0447\u0435\u043d\u0438\u043a\u0430 \u043f\u043e \u0442\u043e\u043c\u0443 \u0438\u043b\u0438 \u0438\u043d\u043e\u043c\u0443 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0443. \u0412 \u0437\u0430\u0434\u0430\u0447\u0443 \u0437\u0430\u0432\u0443\u0447\u0430 \u0432\u0445\u043e\u0434\u0438\u0442 \u0442\u0430\u043a\u0436\u0435 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u044f.</p>"},{"location":"LR3/lab3/#_1","title":"\u0425\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b","text":""},{"location":"LR3/lab3/#modelspy","title":"models.py:","text":"<pre><code>class Classes(models.Model):\n    litera_types = (\n        ('A', '\u0410'),\n        ('B', '\u0411'),\n        ('V', '\u0412'),\n        ('G', '\u0413'),\n    )\n    teacher = models.ForeignKey(\n        'Teachers',\n        on_delete=models.CASCADE,\n        verbose_name='\u041a\u043b\u0430\u0441\u0441\u043d\u044b\u0439 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c',\n        blank=True,\n        null=True\n    )\n    year = models.IntegerField(verbose_name='\u0413\u043e\u0434 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u044f')\n    litera = models.CharField(\n        max_length=1,\n        choices=litera_types,\n        verbose_name='\u0411\u0443\u043a\u0432\u0430'\n    )\n    teachings = models.ManyToManyField(\n        'Teachings',\n        verbose_name='\u041f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0438\u044f',\n        through='Schedules',\n        related_name='class_teachings'\n    )\n\n\nclass Teachers(models.Model):\n    cabinet = models.OneToOneField('Cabinets', on_delete=models.CASCADE, primary_key=False, blank=True, null=True)\n    FIO = models.CharField(max_length=120, verbose_name='\u0424\u0418\u041e')\n    subjects = models.ManyToManyField(\n        'Subjects',\n        verbose_name='\u041f\u0440\u0435\u0434\u043c\u0435\u0442\u044b',\n        through='Teachings',\n        related_name='teacher_subjects'\n    )\n\n\nclass Cabinets(models.Model):\n    number = models.IntegerField(verbose_name='\u041d\u043e\u043c\u0435\u0440')\n    floor = models.IntegerField(verbose_name='\u042d\u0442\u0430\u0436')\n\n\nclass Subjects(models.Model):\n    subject_types = (\n        ('Math', '\u041c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u043a\u0430'),\n        ('Physics', '\u0424\u0438\u0437\u0438\u043a\u0430'),\n        ('Arts', '\u0418\u0417\u041e'),\n        ('Music', '\u041c\u0443\u0437\u044b\u043a\u0430'),\n        ('Chemisty', '\u0425\u0438\u043c\u0438\u044f'),\n        ('Sports', '\u0424\u0438\u0437\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043a\u0443\u043b\u044c\u0442\u0443\u0440\u0430'),\n        ('Russian', '\u0420\u0443\u0441\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a'),\n        ('English', '\u0410\u043d\u0433\u043b\u0438\u0439\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a'),\n        ('Literature', '\u041b\u0438\u0442\u0435\u0440\u0430\u0442\u0443\u0440\u0430')\n    )\n    teachers = models.ManyToManyField(\n        'Teachers',\n        verbose_name='\u0423\u0447\u0438\u0442\u0435\u043b\u044f',\n        through='Teachings',\n        related_name='subject_teachers'\n    )\n    subject = models.CharField(max_length=50, choices=subject_types, verbose_name='\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435')\n    description = models.TextField(verbose_name='\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435')\n\n\nclass Teachings(models.Model):\n    teacher = models.ForeignKey('Teachers', verbose_name='\u0423\u0447\u0438\u0442\u0435\u043b\u044c', on_delete=models.CASCADE)\n    subject = models.ForeignKey('Subjects', verbose_name='\u041f\u0440\u0435\u0434\u043c\u0435\u0442', on_delete=models.CASCADE)\n    experience = models.IntegerField(verbose_name='\u0421\u0442\u0430\u0436')\n    classes = models.ManyToManyField(\n        'Classes',\n        verbose_name='\u041a\u043b\u0430\u0441\u0441\u044b',\n        through='Schedules',\n        related_name='teaching_classes'\n    )\n\n    class Meta:\n        unique_together = ('teacher', 'subject')\n\n\nclass Schedules(models.Model):\n    teaching = models.ForeignKey(\n        'Teachings',\n        on_delete=models.CASCADE,\n        verbose_name='\u041f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u043d\u0438\u0435',\n        blank=True,\n        null=True\n    )\n    group = models.ForeignKey('Classes', on_delete=models.CASCADE, verbose_name='\u041a\u043b\u0430\u0441\u0441', blank=True, null=True)\n    date = models.DateTimeField()\n    students = models.ManyToManyField(\n        'Students',\n        verbose_name='\u0423\u0447\u0435\u043d\u0438\u043a\u0438',\n        through='Grades',\n        related_name='schedule_students'\n    )\n\n\nclass Students(models.Model):\n    group = models.ForeignKey('Classes', on_delete=models.CASCADE, verbose_name='\u041a\u043b\u0430\u0441\u0441', blank=True, null=True)\n    FIO = models.CharField(max_length=120, verbose_name='\u0424\u0418\u041e')\n    schedules = models.ManyToManyField('Schedules', verbose_name='\u0417\u0430\u043d\u044f\u0442\u0438\u044f', through='Grades',\n                                       related_name='student_schedules')\n\n\nclass Grades(models.Model):\n    grade_types = (\n        ('2', '\u041d\u0435\u0443\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e'),\n        ('3', '\u0423\u0434\u043e\u0432\u043b\u0435\u0442\u0432\u043e\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u043e'),\n        ('4', '\u0425\u043e\u0440\u043e\u0448\u043e'),\n        ('5', '\u041e\u0442\u043b\u0438\u0447\u043d\u043e'),\n    )\n    schedule = models.ForeignKey('Schedules', on_delete=models.CASCADE, verbose_name='\u041f\u0440\u0435\u0434\u043c\u0435\u0442 \u0432 \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0438', blank=True,\n                                 null=True)\n    student = models.ForeignKey('Students', on_delete=models.CASCADE, verbose_name='\u0423\u0447\u0435\u043d\u0438\u043a', blank=True, null=True)\n    grade = models.CharField(max_length=50, choices=grade_types, verbose_name='\u041e\u0446\u0435\u043d\u043a\u0430')\n    attendance = models.BooleanField(blank=True, null=True)\n</code></pre>"},{"location":"LR3/lab3/#viewspy","title":"views.py:","text":"<pre><code>class TeacherListView(generics.ListAPIView):\n    queryset = Teachers.objects.all()\n    serializer_class = TeacherSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass TeacherRetrieveView(generics.RetrieveAPIView):\n    queryset = Teachers.objects.all()\n    serializer_class = TeacherSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass TeacherCreateView(generics.CreateAPIView):\n    queryset = Teachers.objects.all()\n    serializer_class = TeacherSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass TeacherUpdateView(generics.UpdateAPIView):\n    queryset = Teachers.objects.all()\n    serializer_class = TeacherSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass TeacherDeleteView(generics.DestroyAPIView):\n    queryset = Teachers.objects.all()\n    serializer_class = TeacherSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass CabinetListView(generics.ListAPIView):\n    queryset = Cabinets.objects.all()\n    serializer_class = CabinetSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n    authentication_classes = (authentication.TokenAuthentication,)\n\n\nclass CabinetRetrieveView(generics.RetrieveAPIView):\n    queryset = Cabinets.objects.all()\n    serializer_class = CabinetSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass CabinetCreateView(generics.CreateAPIView):\n    queryset = Cabinets.objects.all()\n    serializer_class = CabinetSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass CabinetUpdateView(generics.UpdateAPIView):\n    queryset = Cabinets.objects.all()\n    serializer_class = CabinetSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass CabinetDeleteView(generics.DestroyAPIView):\n    queryset = Cabinets.objects.all()\n    serializer_class = CabinetSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass ClassListView(generics.ListAPIView):\n    queryset = Classes.objects.all()\n    serializer_class = ClassSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass ClassRetrieveView(generics.RetrieveAPIView):\n    queryset = Classes.objects.all()\n    serializer_class = ClassSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass ClassCreateView(generics.CreateAPIView):\n    queryset = Classes.objects.all()\n    serializer_class = ClassSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass ClassUpdateView(generics.UpdateAPIView):\n    queryset = Classes.objects.all()\n    serializer_class = ClassSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass ClassDeleteView(generics.DestroyAPIView):\n    queryset = Classes.objects.all()\n    serializer_class = ClassSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass StudentListView(generics.ListAPIView):\n    queryset = Students.objects.all()\n    serializer_class = StudentSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass StudentRetrieveView(generics.RetrieveAPIView):\n    queryset = Students.objects.all()\n    serializer_class = StudentSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass StudentCreateView(generics.CreateAPIView):\n    queryset = Students.objects.all()\n    serializer_class = StudentSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass StudentUpdateView(generics.UpdateAPIView):\n    queryset = Students.objects.all()\n    serializer_class = StudentSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass StudentDeleteView(generics.DestroyAPIView):\n    queryset = Students.objects.all()\n    serializer_class = StudentSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass ScheduleListView(generics.ListAPIView):\n    queryset = Schedules.objects.all()\n    serializer_class = ScheduleSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass ScheduleRetrieveView(generics.RetrieveAPIView):\n    queryset = Schedules.objects.all()\n    serializer_class = ScheduleSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass ScheduleCreateView(generics.CreateAPIView):\n    queryset = Schedules.objects.all()\n    serializer_class = ScheduleSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass ScheduleUpdateView(generics.UpdateAPIView):\n    queryset = Schedules.objects.all()\n    serializer_class = ScheduleSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass ScheduleDeleteView(generics.DestroyAPIView):\n    queryset = Schedules.objects.all()\n    serializer_class = ScheduleSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass TeachingListView(generics.ListAPIView):\n    queryset = Teachings.objects.all()\n    serializer_class = TeachingSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass TeachingRetrieveView(generics.RetrieveAPIView):\n    queryset = Teachings.objects.all()\n    serializer_class = TeachingSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass TeachingCreateView(generics.CreateAPIView):\n    queryset = Teachings.objects.all()\n    serializer_class = TeachingSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass TeachingUpdateView(generics.UpdateAPIView):\n    queryset = Teachings.objects.all()\n    serializer_class = TeachingSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass TeachingDeleteView(generics.DestroyAPIView):\n    queryset = Teachings.objects.all()\n    serializer_class = TeachingSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass SubjectListView(generics.ListAPIView):\n    queryset = Subjects.objects.all()\n    serializer_class = SubjectSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass SubjectRetrieveView(generics.RetrieveAPIView):\n    queryset = Subjects.objects.all()\n    serializer_class = SubjectSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass SubjectCreateView(generics.CreateAPIView):\n    queryset = Subjects.objects.all()\n    serializer_class = SubjectSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass SubjectUpdateView(generics.UpdateAPIView):\n    queryset = Subjects.objects.all()\n    serializer_class = SubjectSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass SubjectDeleteView(generics.DestroyAPIView):\n    queryset = Subjects.objects.all()\n    serializer_class = SubjectSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass SpecialStudentListView(generics.ListAPIView):\n    serializer_class = StudentSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n    def get_queryset(self):\n        grade = self.kwargs['grade']\n        studs = Students.objects.filter(grades__grade__contains=grade)\n        return studs\n\n\nclass GradeListView(generics.ListAPIView):\n    queryset = Grades.objects.all()\n    serializer_class = GradeSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass GradeRetrieveView(generics.RetrieveAPIView):\n    queryset = Grades.objects.all()\n    serializer_class = GradeSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass GradeCreateView(generics.CreateAPIView):\n    queryset = Grades.objects.all()\n    serializer_class = GradeSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass GradeUpdateView(generics.UpdateAPIView):\n    queryset = Grades.objects.all()\n    serializer_class = GradeSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass GradeDeleteView(generics.DestroyAPIView):\n    queryset = Grades.objects.all()\n    serializer_class = GradeSerializer\n    permission_classes = [permissions.IsAuthenticated, ]\n\n\nclass LogOut(APIView):\n    def get(self, request, format=None):\n        request.user.auth_token.delete()\n        return Response(status=status.HTTP_200_OK)\n</code></pre>"},{"location":"LR3/lab3/#serializerspy","title":"serializers.py:","text":"<pre><code>class CabinetSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Cabinets\n        fields = '__all__'\n\nclass TeacherSerializer(serializers.ModelSerializer):\n    #cabinet = CabinetSerializer(many=False)\n    class Meta:\n        model = Teachers\n        fields = '__all__'\n\nclass ClassSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Classes\n        fields = '__all__'\n\nclass StudentSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Students\n        fields = '__all__'\n\n\nclass TeachingSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Teachings\n        fields = '__all__'\n\nclass SubjectSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Subjects\n        fields = '__all__'\n\nclass GradeSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Grades\n        fields = '__all__'\n\n\n\n\nclass StudentSerializer(serializers.ModelSerializer):\n    #grades_set = GradeSerializer(many=True)\n    class Meta:\n        model = Students\n        fields = '__all__'\n\nclass ScheduleSerializer(serializers.ModelSerializer):\n    class Meta:\n        model = Schedules\n        fields = '__all__'\n</code></pre>"},{"location":"LR3/lab3/#urlspy","title":"urls.py:","text":"<pre><code>urlpatterns = [\n    path('teachers/all/', TeacherListView.as_view(), name='teacher_list'),\n    path('teachers/&lt;int:pk&gt;/', TeacherRetrieveView.as_view(), name='teacher_detail'),\n    path('teachers/create/', TeacherCreateView.as_view(), name='teacher_create'),\n    path('teachers/update/&lt;int:pk&gt;/', TeacherUpdateView.as_view(), name='teacher_update'),\n    path('teachers/delete/&lt;int:pk&gt;/', TeacherDeleteView.as_view(), name='teacher_delete'),\n\n    path('cabinets/all/', CabinetListView.as_view(), name='cabinet_list'),\n    path('cabinets/&lt;int:pk&gt;/', CabinetRetrieveView.as_view(), name='cabinet_detail'),\n    path('cabinets/create/', CabinetCreateView.as_view(), name='cabinet_create'),\n    path('cabinets/update/&lt;int:pk&gt;/', CabinetUpdateView.as_view(), name='cabinet_update'),\n    path('cabinets/delete/&lt;int:pk&gt;/', CabinetDeleteView.as_view(), name='cabinet_delete'),\n\n    path('classes/all/', ClassListView.as_view(), name='class_list'),\n    path('classes/&lt;int:pk&gt;/', ClassRetrieveView.as_view(), name='class_detail'),\n    path('classes/create/', ClassCreateView.as_view(), name='class_create'),\n    path('classes/update/&lt;int:pk&gt;/', ClassUpdateView.as_view(), name='class_update'),\n    path('classes/delete/&lt;int:pk&gt;/', ClassDeleteView.as_view(), name='class_delete'),\n\n    path('students/all/', StudentListView.as_view(), name='student_list'),\n    path('students/&lt;int:pk&gt;/', StudentRetrieveView.as_view(), name='student_detail'),\n    path('students/create/', StudentCreateView.as_view(), name='student_create'),\n    path('students/update/&lt;int:pk&gt;/', StudentUpdateView.as_view(), name='student_update'),\n    path('students/delete/&lt;int:pk&gt;/', StudentDeleteView.as_view(), name='student_delete'),\n\n    path('schedules/all/', ScheduleListView.as_view(), name='schedule_list'),\n    path('schedules/&lt;int:pk&gt;/', ScheduleRetrieveView.as_view(), name='schedule_detail'),\n    path('schedules/create/', ScheduleCreateView.as_view(), name='schedule_create'),\n    path('schedules/update/&lt;int:pk&gt;/', ScheduleUpdateView.as_view(), name='schedule_update'),\n    path('schedules/delete/&lt;int:pk&gt;/', ScheduleDeleteView.as_view(), name='schedule_delete'),\n\n    path('teachings/all/', TeachingListView.as_view(), name='teaching_list'),\n    path('teachings/&lt;int:pk&gt;/', TeachingRetrieveView.as_view(), name='teaching_detail'),\n    path('teachings/create/', TeachingCreateView.as_view(), name='teaching_create'),\n    path('teachings/update/&lt;int:pk&gt;/', TeachingUpdateView.as_view(), name='teaching_update'),\n    path('teachings/delete/&lt;int:pk&gt;/', TeachingDeleteView.as_view(), name='teaching_delete'),\n\n    path('subjects/all/', SubjectListView.as_view(), name='subject_list'),\n    path('subjects/&lt;int:pk&gt;/', SubjectRetrieveView.as_view(), name='subject_detail'),\n    path('subjects/create/', SubjectCreateView.as_view(), name='subject_create'),\n    path('subjects/update/&lt;int:pk&gt;/', SubjectUpdateView.as_view(), name='subject_update'),\n    path('subjects/delete/&lt;int:pk&gt;/', SubjectDeleteView.as_view(), name='subject_delete'),\n\n    path('grades/all/', GradeListView.as_view(), name='grade_list'),\n    path('grades/&lt;int:pk&gt;/', GradeRetrieveView.as_view(), name='grade_detail'),\n    path('grades/create/', GradeCreateView.as_view(), name='grade_create'),\n    path('grades/update/&lt;int:pk&gt;/', GradeUpdateView.as_view(), name='grade_update'),\n    path('grades/delete/&lt;int:pk&gt;/', GradeDeleteView.as_view(), name='grade_delete'),\n\n    path('auth/', include('djoser.urls')),\n    path('auth/token', obtain_auth_token, name='token'),\n    path('logout', LogOut.as_view()),\n\n    path('students_by_grades/&lt;str:grade&gt;/', SpecialStudentListView.as_view(), name='list_of_students'),\n]\n</code></pre>"},{"location":"LR3/lab3/#_2","title":"\u0421\u0445\u0435\u043c\u0430 \u0411\u0414","text":""},{"location":"LR3/lab3/#_3","title":"\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u043e\u0432:","text":""},{"location":"LR3/lab3/#_4","title":"\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0435:","text":""},{"location":"LR3/lab3/#_5","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430:","text":""},{"location":"LR3/lab3/#_6","title":"\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430:","text":""},{"location":"LR3/lab3/#_7","title":"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u0430\u0431\u0438\u043d\u0435\u0442\u0430:","text":""},{"location":"LR3/lab3/#_8","title":"\u0421\u043f\u0438\u0441\u043e\u043a \u043a\u043b\u0430\u0441\u0441\u043e\u0432:","text":""},{"location":"LR3/lab3/#_9","title":"\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043b\u0430\u0441\u0441\u0435:","text":""},{"location":"LR3/lab3/#_10","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430:","text":""},{"location":"LR3/lab3/#_11","title":"\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430:","text":""},{"location":"LR3/lab3/#_12","title":"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u0430:","text":""},{"location":"LR3/lab3/#_13","title":"\u0421\u043f\u0438\u0441\u043e\u043a \u043e\u0446\u0435\u043d\u043e\u043a:","text":""},{"location":"LR3/lab3/#_14","title":"\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e\u0431 \u043e\u0446\u0435\u043d\u043a\u0435:","text":""},{"location":"LR3/lab3/#_15","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0446\u0435\u043d\u043a\u0438:","text":""},{"location":"LR3/lab3/#_16","title":"\u041e\u0431\u043d\u043e\u043b\u0435\u043d\u0438\u0435 \u043e\u0446\u0435\u043d\u043a\u0438:","text":""},{"location":"LR3/lab3/#_17","title":"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043e\u0446\u0435\u043d\u043a\u0438:","text":""},{"location":"LR3/lab3/#_18","title":"\u0421\u043f\u0438\u0441\u043e\u043a \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043e\u0432:","text":""},{"location":"LR3/lab3/#_19","title":"\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0435:","text":""},{"location":"LR3/lab3/#_20","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430:","text":""},{"location":"LR3/lab3/#_21","title":"\u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430:","text":""},{"location":"LR3/lab3/#_22","title":"\u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430:","text":"<p>\u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u043c\u0435\u0442\u043e\u0434\u044b \u0434\u043b\u044f \u0434\u0440\u0443\u0433\u0438\u0445 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439...</p>"},{"location":"LR4/lab4/","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21164","text":"<ul> <li>\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0440\u0430\u0431\u043e\u0442\u0443 4.1 \u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u044f\u0437\u044b\u043a\u0430 JavaScript). (https://docs.google.com/document/d/1lurVq_ddbKQ-rORvxF3T9PlPPy-sOgHwFazCI0yEqYY/edit?usp=sharing)</li> <li>\u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0443\u044e \u0440\u0430\u0431\u043e\u0442\u0443 4.2. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 Vue.JS. (https://docs.google.com/document/d/1kSXkW6Vcis8z-TunNALcapCVmMHps3jaDdIP4rZkV9E/edit?usp=sharing)</li> <li>\u041d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438, \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0432 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u21163 CORS (Cross-origin resource sharing) \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u043e\u0439 4.3</li> <li>\u0423\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u0441 \u043e\u0434\u043d\u0438\u043c \u0438\u0437 \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0432\u0430\u0448\u0435\u0439 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043d\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u044c\u044e (\u044d\u0442\u043e \u043e\u0447\u0435\u043d\u044c \u0432\u0430\u0436\u043d\u044b\u0439 \u043f\u0443\u043d\u043a\u0442, \u0442\u043a \u0431\u044b\u0432\u0430\u0435\u0442 \u0442\u0430\u043a\u043e\u0435, \u0447\u0442\u043e \u043d\u0435 \u0432\u0441\u0435 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u044b \u043f\u043e\u043d\u0438\u043c\u0430\u044e\u0442 \u0441\u0443\u0442\u044c \u0441\u0432\u043e\u0438\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432).</li> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438, \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0443\u0447\u0451\u0442\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e. </li> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e (\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0438\u0437 \u043f\u0443\u043d\u043a\u0442\u0430 4). \u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b:</li> <li>\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c vuetify \u0438\u043b\u0438 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u0443\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443. \u041f\u043e\u043b\u0435\u0437\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b:</li> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0449\u0443\u044e \u0440\u0430\u0431\u043e\u0442\u0443 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0445 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 MkDocs.</li> </ul>"},{"location":"LR4/lab4/#_1","title":"\u0425\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0440\u0430\u0431\u043e\u0442\u044b","text":""},{"location":"LR4/lab4/#_2","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438:","text":""},{"location":"LR4/lab4/#_3","title":"\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438:","text":""},{"location":"LR4/lab4/#_4","title":"\u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u043e\u0432:","text":""},{"location":"LR4/lab4/#_5","title":"\u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438 \u043e \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u0435:","text":""},{"location":"LR4/lab4/#_6","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u0442\u0443\u0434\u0435\u043d\u0442\u0430:","text":""},{"location":"LR4/lab4/#_7","title":"\u0421\u043f\u0438\u0441\u043e\u043a \u043e\u0446\u0435\u043d\u043e\u043a:","text":""},{"location":"LR4/lab4/#_8","title":"\u0420\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u0446\u0435\u043d\u043a\u0438:","text":""},{"location":"LR4/lab4/#_9","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0446\u0435\u043d\u043a\u0438:","text":""},{"location":"pr/pr1/","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 3.1","text":""},{"location":"pr/pr1/#1","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 1","text":"<p>\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 6-7 \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0438 5-6 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u044c\u0442\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442 1 \u0434\u043e 3 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u0438\u0431\u043e \u0432 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u0438\u043d\u0442\u0435\u0440\u043f\u0440\u0435\u0442\u0430\u0442\u043e\u0440\u0430, \u043b\u0438\u0431\u043e \u0432 \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u043c python-\u0444\u0430\u0439\u043b\u0435. \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u043c \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u0442\u0430\u0442\u044c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432. </p> <pre><code>from project_second_app.models import *\ncar = Car.objects.create(state_number='A000AA199', brand='BMW', model='X5')\ncar = Car.objects.create(state_number='A001AA199', brand='BMW', model='X4')\ncar = Car.objects.create(state_number='A000AA198', brand='BMW', model='X5')\ncar = Car.objects.create(state_number='A004AA197', brand='BMW', model='M5')\ncar = Car.objects.create(state_number='A006AA197', brand='Audi', model='A80')\ncar = Car.objects.create(state_number='A007AA197', brand='Audi', model='S6')\nowner = Owner.objects.create(firstName=\"First\", lastName=\"Firstov\")\nowner = Owner.objects.create(firstName=\"Second\", lastName=\"Seconod\")\nowner = Owner.objects.create(firstName=\"Third\", lastName=\"Thirdov\")\nowner = Owner.objects.create(firstName=\"Fourth\", lastName=\"Fourthov\")\nowner = Owner.objects.create(firstName=\"Fith\", lastName=\"Fithov\")\nowner = Owner.objects.create(firstName=\"Sixth\", lastName=\"Sixthov\")\ncar = Car.objects.get(state_number='A000AA199')\nowner = Owner.objects.get(firstName='First')\nownership = Ownership.objects.create(owner_id=owner, car_id=car, date_start='2023-11-06', date_end='2024-03-12')\nowner = Owner.objects.get(firstName='Second')\ncar = Car.objects.get(state_number='A001AA199')\nownership = Ownership.objects.create(owner_id=owner, car_id=car, date_start='2023-12-06', date_end='2024-05-12')\ncar = Car.objects.get(state_number='A000AA198')\nowner = Owner.objects.get(firstName='Third')\nownership = Ownership.objects.create(owner_id=owner, car_id=car, date_start='2024-01-15', date_end='2024-05-12')\ncar = Car.objects.get(state_number='A004AA197')\nowner = Owner.objects.get(firstName='Fourth')\nownership = Ownership.objects.create(owner_id=owner, car_id=car, date_start='2024-03-15', date_end='2024-04-13')\ncar = Car.objects.get(state_number='A006AA197')\nowner = Owner.objects.get(firstName='Fith')\nownership = Ownership.objects.create(owner_id=owner, car_id=car, date_start='2024-01-25')\ncar = Car.objects.get(state_number='A007AA197')\nowner = Owner.objects.get(firstName='Sixth')\nownership = Ownership.objects.create(owner_id=owner, car_id=car, date_start='2024-06-21')\n\nlicense = DriverLicense.objects.create(owner_id=owner, license_number='1111111111', type='b', date_of_issue='2026-12-13')\nowner = Owner.objects.get(firstName='Fith')\nlicense = DriverLicense.objects.create(owner_id=owner, license_number='1111111112', type='b', date_of_issue='2030-05-13')\nowner = Owner.objects.get(firstName='Fourth')\nlicense = DriverLicense.objects.create(owner_id=owner, license_number='1111111113', type='b', date_of_issue='2032-05-13')\nowner = Owner.objects.get(firstName='Third')\nlicense = DriverLicense.objects.create(owner_id=owner, license_number='1111111114', type='b', date_of_issue='2033-02-25')\nowner = Owner.objects.get(firstName='Second')\nlicense = DriverLicense.objects.create(owner_id=owner, license_number='1111111115', type='b', date_of_issue='2025-02-25')\nowner = Owner.objects.get(firstName='First')\nlicense = DriverLicense.objects.create(owner_id=owner, license_number='1111111116', type='b', date_of_issue='2025-02-25')\n</code></pre> <p>\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b:  </p>"},{"location":"pr/pr1/#2","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 2","text":"<p>\u041f\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u0432 \u043f\u0440.1 \u0434\u0430\u043d\u043d\u044b\u043c \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044e:</p> <ul> <li>\u0413\u0434\u0435 \u044d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e, \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 related_name \u043a \u043f\u043e\u043b\u044f\u043c \u043c\u043e\u0434\u0435\u043b\u0438</li> <li>\u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u0430\u0440\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c)</li> <li>\u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201c\u041e\u043b\u0435\u0433\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u044b\u043c \u0434\u0440\u0443\u0433\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u043d\u0430 \u0432\u0430\u0448\u0435 \u0443\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0435)</li> <li>\u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043c\u043e\u0436\u043d\u043e \u0432 2 \u0437\u0430\u043f\u0440\u043e\u0441\u0430)</li> <li>\u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443 \u0432\u0430\u0441 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442)</li> <li>\u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443 \u0432\u0430\u0441 \u0432 \u0431\u0430\u0437\u0435)</li> </ul> <pre><code>Car.objects.filter(brand='BMW')\nOwner.objects.filter(firstName='First')\nowner_id = Owner.objects.get(firstName='First').id\nlicense = DriverLicense.objects.get(owner_id=1)\nowners = Owner.objects.filter(car_)\nowners = Owner.objects.filter(owner_car__car__color__contains='Red')\nowners = Owner.objects.filter(owner_car__date_start__contains='2024')\n</code></pre> <p>\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b: </p>"},{"location":"pr/pr1/#3","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435 3","text":"<ul> <li>\u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f</li> <li>\u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435</li> <li>\u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f</li> <li>\u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438</li> <li>\u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f </li> </ul> <pre><code>DriverLicense.objects.aggregate(Min(\"date_of_issue\"))\nOwnership.objects.aggregate(Max(\"date_start\"))\nOwnership.objects.values(\"owner\").annotate(Count(\"id\"))\nCar.objects.values(\"brand\").annotate(Count(\"id\"))\nfrom django.db.models import F\nOwner.objects.annotate(issue_date=F('driverlicense__date_of_issue')).distinct().order_by('issue_date')\n</code></pre> <p>\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u044b:  </p>"}]}